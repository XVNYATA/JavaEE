<!DOCTYPE hibernate-configuration PUBLIC
	"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>
	<session-factory >
		<!-- mysql数据库连接信息   -->
    <!-- 数据库方法:告诉hibernate是什么数据库 -->
	<property name="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</property>
	<!-- 数据库驱动 -->
	<property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
	<!-- 数据库的连接地址 -->
	<property name="hibernate.connection.url"> jdbc:mysql://127.0.0.1:3306/hibernate</property>
	<!-- 用户名 -->
	<property name="hibernate.connection.username">root</property>
	<!-- 密码 -->
	<property name="hibernate.connection.password"></property>
		
		<!-- c3p0连接池配置信息  -->
	<property name="hibernate.c3p0.max_size">10</property>
	<property name="hibernate.c3p0.min_size">2</property>
	<property name="hibernate.c3p0.timeout"> 5000</property>
		
		<!-- 建表数据更新信息  -->
	 <!-- hibernate的表是自动创建的：
	     根据持久化类（User Book），自动创建持久化类对象的表
	   正是因为hibernate的表示根据持久化类自动创建的
	   所以持久化类才可以与数据库表直接映射。
	   
	   update ： 如果持久化类对应的表不存在就自动创建,如果持久化类对应的表存在就不创建。
	-->
	<property name="hibernate.hbm2ddl.auto">update</property>
		
		<!-- 是否格式化显示sql语句 -->
		<!-- 因为hibernate的sql语句是自动生成的 ,所有通过此配置来显示自动生成的sql语句输出 -->
	<property name="hibernate.show_sql"> true</property>
	<!-- 格式化输出的sql语句： 看起来更加清楚   -->
	<property name="hibernate.format_sql">true</property>
		
		<!-- 映射持久化类的配置 -->
	<mapping class="org.fkjava.hibernate.bean.User"/>	
		
	</session-factory>
</hibernate-configuration>