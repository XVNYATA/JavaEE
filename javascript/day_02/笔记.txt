1、函数调用的三种方式
     //定义一个函数
     var test = function (num1, num2){
       alert((num1 + num2));
     }  

     //第一种调用函数的方式
     window.test(10,20);  // window：javascript中最顶级的对象，可以省略

  

     // 第二种调用函数的方式
     test.call(window, 30,40);

     // 第三种调用函数的方式
     test.apply(window, [100,200]);
     test(500,600)



2、类(我们可以把函数当成类来看待)
      A.当你把函数当用类来用时，那它就提供了一个万能的构造器。
      B.为类添加静态的属性与方法:
      为类添加静态的属性
       test.age = 20;  
       test["age"] = 20;

 
       语法：
       函数的引用.属性名 = 属性值。
       函数的引用["属性名"] = 属性值。
       调用：
       函数的引用.属性名 <===> 函数的引用["属性名"] (可以互换)

3、对象
    12.1 通过new new Function();//new Function()得到一个函数 new new Function();得到一个对象
    备注：所有的用户自定义的函数以及内置函数都继承Function中的方法以及属性
    12.2 new 内置函数()|new 自定义函数();可以得到一个对象
    12.3 json格式的对象：json对象的格式：var json = {name:张三,age:30};


      var json = {"username":"admin",password:"123456"};
         json出来之前异构平台之间的数据传输通过xml文件，但是解析xml文件非常麻烦，
	 json出来之后,异构平台之间数据的传输通过json来实现

4、继承
    
    单个的继承：
       Student.prototype.say = Person.prototype.say;
       语法：
       子函数的引用.prototype.方法名|属性名= 父函数的引用.prototype.方法名|属性名
    

    全部继承：
       Student.prototype = Person.prototype;
       语法：
       子函数的引用.prototype = 父函数的引用.prototype


5、内置函数：无需定义可以直接使用，类似java中List、System
   1.1 Array：定义数组  |var arr = [];
        var arr = new Array(); 
	var arr = new Array(element0, element1, ..., elementn)
	var arr = new Array(2);

   // 往数组中添加元素或删除元素(数组后面)
     arr.push(60);  
     arr.pop();
     // 往数组中添加元素或删除元素(数组前面)
     arr.unshift(5);
     arr.shift();

   1.2 Math
   1.3 Number
   1.4 parseFloat:将字符窜转换成浮点型、parseInt:将字符窜转换成整形 
   1.5 isFinite: 判断是一个数字就返回true 、 isNaN : 判断不是一个数字就返回true
   1.8 String
   1.9 Date


6、Dom(文档对象模型)操作(Document Object Model)：
   针对html页面中的元素(标签)进行增删改查，操作html页面元素的样式以及属性

   HTML页面中的的所有标签都会对应一个Dom对象，操作html标签中的属性以及样式前，先获取该标签对象的dom对象

   <br/>  ==> HTMLBRElement
   <body> ==> HTMLBodyElement
   <input/> ==> HTMLInputElement

  文档树的根据点为Node
  Node下有两个重要的对象：1:Document（文档操作基类） 2、Element(Dom对象)

  1. 获取DOM元素：
      dom元素  = document.getElementById("html元素的id值");
      Node[]  = document.getElementsByName("html元素的name属性值");
      Node[]  = document.getElementsByTagName("html元素的标签名");

   2、操作dom元素的样式：
       dom元素.style.样式名 = 样式值;
       注意：
       如果样式名为： background-color == > backgroundColor   font-size==>fontSize   
       dom元素.class == > dom元素.className = "class样式名称";
     

   3、 操作dom元素的属性(三种方式):
       a. 第一种方式操作属性：
       //设置属性值
       dom元素.属性名 = 属性值;

       //获取属性值
       属性值 = dom元素.属性名;

       //删除属性值
       dom元素.属性名 = "";

      b. 第二种方式操作属性：
       // 设置属性值
       dom元素.setAttribute(属性名, 属性值);

       // 获取属性值
       dom元素.getAttribute("属性名");

    // 删除属性值
       dom元素.removeAttribute("属性名");

   c. 第三种方式操作属性：
       // 设置属性
       var attr = document.createAttribute("属性名");    
       attr.value = "属性值";
       dom元素.setAttributeNode(attr节点);            

       //获取属性
       var attr = dom元素.getAttributeNode("属性名");
       attr.value;

      //删除属性
       var attr = dom元素.getAttributeNode("属性名");
       dom元素.removeAttributeNode(attr节点);


  4. 操作dom元素的文本：
       a. dom元素.innerHTML = "html格式的字符串";
       b. dom元素.innerText = "普通的文本字符串"; 
          dom元素.textContent = "普通的文本字符串";//存在兼容性问题

   
  5.创建DOM元素
    var element = document.createElement("页面元素标签名");//得到元素之后可以去设置页面元素的属性
 
  6、追加页面元素
     DOM元素.appendChild("被追加的元素");
     cloneNode：克隆
     var cloneForm = form.cloneNode(true|false);//form：被克隆的对象   true：克隆子节点  false:不克隆子节点

  7. 删除DOM元素：
     dom元素.removeChild(dom子元素);

  8. 替换DOM元素：
     dom元素.replaceChild(新dom子元素, 旧dom子元素);
  
  9. 插入DOM元素
     dom元素.insertBefore(新dom子元素, 旧dom子元素);
	   

  